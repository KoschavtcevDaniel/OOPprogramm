public class CLicker implements Runnable{
    int click = 0;
    Thread t;
    private volatile boolean running = true;
    public CLicker (int p){
        t = new Thread (this);
        t.setPriority(p);
    }
    public void run() {
        while (running) {
            click++;
        }
    }
    public void stop() {
        running = false;
    }
    public void start() {
        t.start();
    }
}

public class HiLoPriority {
    public static void main(String[] args){
        Thread.currentThread().setPriority(Thread.MAX_PRIORITY);
        CLicker lo = new CLicker(Thread.NORM_PRIORITY-3);
        CLicker hi = new CLicker(Thread.NORM_PRIORITY+3);
        lo.start();
        hi.start();
        try{
            Thread.sleep(1000);
        }
        catch(InterruptedException e){
            System.out.println("Прерывание главного потока");
        }
        lo.stop();
        hi.stop();
        try{
            lo.t.join();
            hi.t.join();
        }
        catch (InterruptedException e){
            System.out.println("Прерывание дочернего потока");
        }
        System.out.println("Низкий приоритет" + lo.click);
        System.out.println("Высокий приоритет" + hi.click);
    }
}

